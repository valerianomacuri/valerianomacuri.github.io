{"version":3,"sources":["components/IconTool.js","components/IconToolList.js","pages/Stack.js","pages/Projects.js","components/NavIcons.js","pages/AboutMe.js","components/ModalButton .js","components/NavBar.js","hooks/useWidth.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","img","display","width","breakpoints","down","IconTool","tool","classes","rotate","titleTooltip","Tooltip","title","Typography","variant","placement","className","src","gridItem","IconToolList","Grid","container","spacing","map","item","xl","xs","justifyContent","alignItems","fontWeight","Stack","direction","id","data","picture","description","app","repository","apk","cardContent","minHeight","textAlign","cardActions","flexDirection","styledLink","color","palette","secondary","main","button","Projects","index","sm","Card","CardMedia","component","alt","image","CardContent","CardActions","Link","href","target","social","anchor","textDecoration","text","primary","NavIcons","IconButton","aria-label","onClick","f","rel","styledButton","backgroundColor","avatar","up","height","avatarContainer","AboutMe","lg","underline","Button","fullWidth","disableElevation","disableRipple","Avatar","ModalButton","ReactDOM","createPortal","document","getElementById","flexGrow","navItems","padding","toolbar","drawer","flexShrink","whiteSpace","drawerPaper","itemText","NavBar","useTheme","keys","reverse","reduce","output","key","matches","useMediaQuery","useWidth","useState","section","setSection","open","setOpen","handleChange","useEffect","querySelector","click","AppBar","elevation","position","Toolbar","Drawer","onClose","paper","List","ListItem","ListItemIcon","ListItemText","primaryTypographyProps","createTheme","typography","fontFamily","join","overrides","MuiToolbar","root","MuiButton","contained","borderRadius","paddingTop","paddingBottom","App","ThemeProvider","CssBaseline","Container","maxWidth","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","render","StrictMode"],"mappings":"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","file":"static/js/main.ae2ce0b6.chunk.js","sourcesContent":["import { makeStyles, Tooltip, Typography } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles( theme => ({\r\n    img: {\r\n        display: 'inline-block',\r\n        width: 120,\r\n        [theme.breakpoints.down('xs')]: {\r\n            width: 80\r\n        }\r\n    }\r\n}))\r\n\r\nexport const IconTool = ({\r\n    tool,\r\n    rotate=\"\",\r\n    titleTooltip=\"\"\r\n}) => {\r\n\r\n    const classes = useStyles()\r\n    return (\r\n            <Tooltip title={ <Typography variant='h6'>{ tool }</Typography> } placement='top'>\r\n                <img className={ classes.img } src={`./assets/svg/${ tool }.svg`}/>\r\n            </Tooltip>\r\n    )\r\n} \r\n","import { Grid, makeStyles } from '@material-ui/core'\r\nimport React from 'react'\r\nimport { IconTool } from './IconTool'\r\n\r\nconst useStyles = makeStyles( theme => ({\r\n    gridItem: {\r\n        display: 'flex'\r\n    }\r\n}))\r\n\r\nexport const IconToolList = () => {\r\n\r\n    const tools = [\r\n        \"html\",\r\n        \"css\",\r\n        \"javascript\",\r\n        \"react\",\r\n        \"typescript\",\r\n        \"redux\",\r\n        \"jest\",\r\n        \"git\",\r\n        \"github\",\r\n        \"sass\",\r\n        \"npm\",\r\n    ]\r\n\r\n    const classes = useStyles()\r\n    \r\n    return (\r\n        <Grid container spacing={ 4 }>\r\n            {\r\n                tools.map( item => {\r\n                return  <Grid item xl={ 4 } xs={ 6 } className={ classes.gridItem } justifyContent='center' alignItems='center'>\r\n                            <IconTool key={item} tool={item} />\r\n                        </Grid>\r\n                }) \r\n            } \r\n        </Grid>\r\n    )\r\n}\r\n","import { Grid, makeStyles, Typography } from '@material-ui/core'\r\nimport React from 'react'\r\nimport { IconToolList } from '../components/IconToolList'\r\n\r\nconst useStyles = makeStyles( theme => ({\r\n    title: {\r\n        fontWeight: 'bold'\r\n    }\r\n}))\r\n\r\n\r\nconst Stack = () => {\r\n\r\n    const classes = useStyles()\r\n    return (\r\n        <Grid container direction='column' spacing={ 4 }>\r\n            <Grid item>\r\n                <Typography className={ classes.title } variant='h4' id=\"stack\">Stack</Typography>\r\n            </Grid>\r\n            <Grid item>\r\n                <IconToolList />\r\n            </Grid>\r\n        </Grid>   \r\n    )\r\n}\r\nexport default Stack","import { Button, Card, CardActions, CardContent, CardMedia, Container, Grid, Link, makeStyles, Typography } from '@material-ui/core'\r\nimport React from 'react'\r\n\r\nconst data = [\r\n    {\r\n        picture: './assets/images/journal-app.png',\r\n        description: 'Application to create, save, modify and delete notes, where you can also upload images, to access it you have to login, either with an email or with a gmail account. This application was made with React, Javascript, Redux (for state management), Firebase (for authentication), Cloudinary (for uploading images).',\r\n        app: false,\r\n        repository: 'https://github.com/valerianomacuri/journal-app',\r\n        apk: '',\r\n    },\r\n    {\r\n        picture: './assets/images/rn-pokedex.jpg',\r\n        description: 'This application was made with react native, typescript. I consumed the API from pokeapi.co. You can look for your favorite pokemon and know its characteristics',\r\n        app: true,\r\n        repository: 'https://github.com/valerianomacuri/rn-pokedex',\r\n        apk: '',\r\n    },\r\n    {\r\n        picture: './assets/images/rn-netflix.jpg',\r\n        description: 'This application was made with react native, typescript. I consumed the API from The Movie Database. You can search for the most popular movies, the most recent ones, in premieres and know their synopsis, and the cast',\r\n        app: true,\r\n        repository: 'https://github.com/valerianomacuri/react-native-netflix',\r\n        apk: '',\r\n    },\r\n    {\r\n        picture: './assets/images/merch.png',\r\n        description: 'Ecommerce application that integrates the Paypal API, typescript, react hooks and react router were used for this project.',\r\n        app: false,\r\n        repository: 'https://github.com/valerianomacuri/programming-merch',\r\n        apk: '',\r\n    },\r\n    {\r\n        picture: './assets/images/gif-expert-app.png',\r\n        description: 'Application made with react, you can search for your favorite gifs, it shows you gifs of 20 results, the API of Giphy developers is consumed.',\r\n        app: false,\r\n        repository: 'https://github.com/valerianomacuri/react-gifexpertapp',\r\n        apk: '',\r\n    },\r\n    {\r\n        picture: './assets/images/jondev-notes.png',\r\n        description: 'This app allows you to save notes and to-do lists, use as storage localStorage',\r\n        app: false,\r\n        repository: 'https://github.com/valerianomacuri/jondev-notes',\r\n        apk: '',\r\n    },\r\n    {\r\n        picture: './assets/images/netflix.jpg',\r\n        description: 'It is a netflix landing page clone made with HTML and CSS',\r\n        app: false,\r\n        repository: 'https://github.com/valerianomacuri/netflix',\r\n        apk: '',\r\n    },\r\n    {\r\n        picture: './assets/images/doge-exchange.jpg',\r\n        description: 'Application made with react consuming the CoinGecko API',\r\n        app: false,\r\n        repository: 'https://github.com/valerianomacuri/doge-exchange',\r\n        apk: '',\r\n    }\r\n]\r\n\r\nconst useStyles = makeStyles( theme => ({\r\n    title: {\r\n        fontWeight: 'bold'\r\n    },\r\n    cardContent: {\r\n        minHeight: '170px',\r\n        textAlign: 'center'\r\n    },\r\n    cardActions: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        minHeight: '70px'\r\n    },\r\n    styledLink: {\r\n        color: theme.palette.secondary.main,\r\n        fontWeight: 'bold'\r\n    },\r\n    button:{\r\n        color: 'yellow'\r\n    }\r\n}))\r\n\r\nconst Projects = () => {\r\n\r\n    const classes = useStyles()\r\n\r\n    return (\r\n            <Grid container direction='column' spacing={ 4 }>\r\n                    <Grid item>\r\n                        <Typography variant=\"h4\" id=\"projects\" className={ classes.title }>I have done some projects like ...</Typography>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Grid container spacing={ 4 }>\r\n                            {\r\n                                data.map((item, index )=> \r\n                                    // <ProyectItem \r\n                                    //     key={ index }\r\n                                    //     app={item.app}  \r\n                                    //     picture={item.picture} \r\n                                    //     description={item.description} \r\n                                    //     repository={item.repository}\r\n                                    //     apk={ item.apk } \r\n                                    // />\r\n                                    <Grid item xs={ 12 } sm={ 6 } key={ index }>\r\n                                        <Card variant='outlined'>\r\n                                            <CardMedia\r\n                                                component=\"img\"\r\n                                                alt=\"green iguana\"\r\n                                                image={ item.picture }\r\n                                            />\r\n                                            <CardContent\r\n                                                className={ classes.cardContent }\r\n                                            >\r\n                                                <Typography variant=\"body2\" color=\"text.secondary\">\r\n                                                    { item.description }\r\n                                                </Typography>\r\n                                            </CardContent>\r\n                                            <CardActions className={ classes.cardActions }>\r\n                                                <Link href={ item.repository } target=\"_blank\" className={ classes.styledLink }><i className='bx bxl-github'></i>Get the github repository</Link>\r\n                                                {\r\n                                                    item.app && <Link href={ item.apk } target=\"_blank\" className={ classes.styledLink }><i className='bx bxl-android'></i>Download for Android</Link>\r\n                                                }\r\n                                            </CardActions>\r\n                                            </Card>\r\n                                    </Grid>\r\n                                )\r\n                            }\r\n                        </Grid>\r\n                    </Grid>\r\n            </Grid>\r\n    )\r\n}\r\n\r\nexport default Projects\r\n ","import { Fragment } from \"react\"\r\nimport { IconButton, makeStyles } from \"@material-ui/core\"\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport FacebookIcon from '@material-ui/icons/Facebook';\r\n\r\nconst social = {\r\n    linkedin: \"https://www.linkedin.com/in/valerianomacuri/\",\r\n    github: \"https://github.com/valerianomacuri\",\r\n    facebook: \"https://www.facebook.com/macuri.2140\"\r\n}\r\n\r\nconst useStyles = makeStyles( theme => ({\r\n    anchor: {\r\n        textDecoration: 'none',\r\n        color: theme.palette.text.primary,\r\n        '&:hover': {\r\n            color: theme.palette.secondary.main\r\n        }\r\n    }\r\n}))\r\n\r\nexport const NavIcons = () => {\r\n\r\n    const classes = useStyles()\r\n    return (\r\n        <Fragment>\r\n            <IconButton aria-label=\"linkedin-button\" onClick={ f => f }> \r\n                <a href={social.linkedin} target=\"_blank\" rel=\"noreferrer\" className={ classes.anchor }><LinkedInIcon /></a>\r\n            </IconButton>\r\n            <IconButton aria-label=\"linkedin-button\" onClick={ f => f }> \r\n                <a href={social.github} target=\"_blank\" rel=\"noreferrer\" className={ classes.anchor }><GitHubIcon /></a>\r\n            </IconButton>\r\n            <IconButton aria-label=\"linkedin-button\" onClick={ f => f }> \r\n                <a href={social.facebook} target=\"_blank\" rel=\"noreferrer\" className={ classes.anchor }><FacebookIcon /></a>\r\n            </IconButton>      \r\n        </Fragment>\r\n    )\r\n}\r\n","import { Avatar, Button, Container, Grid, Link, makeStyles, Typography } from '@material-ui/core'\nimport clsx from 'clsx'\nimport { NavIcons } from '../components/NavIcons'\n\nconst useStyles = makeStyles( theme => ({\n    styledButton: {\n        backgroundColor: '#eee',\n        color: theme.palette.text.primary,\n        '&:hover': {\n            textDecoration: 'none',\n            color: theme.palette.secondary.main,\n            backgroundColor: '#eee',\n        }\n    },\n    styledLink: {\n        color: theme.palette.text.primary,\n    },\n    title: {\n        fontWeight: 'bold'\n    },\n    container: {\n        display: 'flex',\n        alignItems: 'center',\n        minHeight: 'calc(100vh - 70px)' \n    },\n    avatar: {\n        [theme.breakpoints.up('xs')]: {\n            width: '50%',\n            height: '50%',\n        },\n        [theme.breakpoints.up('sm')]: {\n            width: '90%',\n            height: '90%',\n        },\n        [theme.breakpoints.up('md')]: {\n            width: '80%',\n            height: '80%',\n        }\n    },\n    avatarContainer: {\n        display: 'flex',\n        justifyContent: 'center'\n    }\n}))\n\nconst AboutMe = () => {\n\n    const classes = useStyles()\n    return (\n          <Grid container  className={ classes.container } id=\"about\">\n            <Grid item lg={ 8 } sm={ 8 } xs={ 12 } >\n                <Typography variant=\"h4\" color=\"textSecondary\" className={ classes.title }>Hello, I'm <span className=\"tracking-in-expand\">Frontend Developer</span></Typography>\n                <Typography color=\"textPrimary\">\n                Hi, I introduce myself, I am a person who loves the world of programming, I am open to work, I excel at developing frontend applications with React.\n                <br />\n                <br />\n                I have had great achievements such as completing the School of Javascript, or the learning path Frontend with React at Platzi.\n                </Typography>\n                <NavIcons />\n                <Grid container spacing={ 2 }>\n                    <Grid item xs={ 12 } sm={ 6 }>\n                            <Link href=\".\\assets\\documents\\Leonardo Valeriano SAMPLE CV HQ.pdf\" target=\"_blank\" className={ classes.styledLink } underline='none'>\n                                <Button fullWidth className={ classes.styledButton } variant='contained' disableElevation disableRipple> \n                                    <i className='bx bx-file'></i>Download Resume\n                                </Button>\n                            </Link>\n                    </Grid>\n                    <Grid item xs={ 12 } sm={ 6 }>\n                            <Link href=\"https://wa.me/+51934643232\" target=\"_blank\"  rel=\"noreferrer\" underline='none'>\n                                <Button fullWidth variant=\"contained\" disableElevation>\n                                    Contact Me\n                                </Button>\n                            </Link>\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid item lg={ 4 } sm={ 4 } xs={ 12 } className={ classes.avatarContainer }> \n                <Avatar alt=\"photo portrait\" src=\"./assets/images/photo.png\" className={ classes.avatar } />\n            </Grid>      \n        </Grid>\n    )\n}\n export default AboutMe\n","import React from 'react'\r\nimport ReactDOM from 'react-dom';\r\nexport const ModalButton  = () => {\r\n    return (\r\n        ReactDOM.createPortal(\r\n            <a href=\"#about\" className=\"ModalButton \">\r\n                <i className='bx bx-up-arrow-alt'></i>\r\n            </a>,\r\n            document.getElementById('modal')\r\n        )\r\n    )\r\n}\r\n","import { AppBar, makeStyles, Toolbar, Typography, useTheme, Drawer, IconButton, List, ListItem, ListItemText, ListItemIcon } from '@material-ui/core'\r\nimport { Fragment, useEffect, useState } from 'react'\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport AppsIcon from '@material-ui/icons/Apps';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport ReorderIcon from '@material-ui/icons/Reorder';\r\nimport { NavIcons } from './NavIcons'\r\nimport { useWidth } from '../hooks/useWidth';\r\n\r\nconst drawerWidth = 240\r\n\r\nconst useStyles = makeStyles( theme => ({\r\n    spacing: {\r\n        flexGrow: 1\r\n    },\r\n    navItems: {\r\n        textDecoration: 'none',\r\n        fontWeight: 'bold',\r\n        color: theme.palette.text.primary,\r\n        padding: '10px 15px',\r\n        '&:hover': {\r\n            color: theme.palette.secondary.main,\r\n        },\r\n        [theme.breakpoints.down('xs')]: {\r\n            display: 'none'\r\n        }\r\n    },\r\n    toolbar: {\r\n        padding: 0\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n        whiteSpace: 'nowrap',\r\n    \r\n    },\r\n    drawerPaper: {\r\n    width: drawerWidth,\r\n    },\r\n    itemText: {\r\n        fontWeight: 'bold',\r\n        color: theme.palette.text.primary,\r\n    }\r\n}))\r\n\r\nconst NavBar = () => {\r\n\r\n    const classes = useStyles()\r\n    const width = useWidth()\r\n    const [ section, setSection ] = useState('')\r\n    const [open, setOpen] = useState(false)\r\n\r\n    // first option\r\n    const handleChangeSection = async( href ) => {\r\n        await setOpen( false )\r\n        document.querySelector( `[href=\"${ href }\"]` ).click()\r\n    }\r\n\r\n    // second option\r\n\r\n    const handleChange = ( href ) => {\r\n        setOpen( false )\r\n        setSection( href )\r\n    }\r\n\r\n\r\n\r\n    useEffect( () => {\r\n        if ( section !== '' ) {\r\n            document.querySelector( `[href=\"${ section }\"]` ).click()\r\n        }\r\n    }, [ section ])\r\n    return (\r\n        <Fragment>\r\n            <AppBar elevation={ 0 } position='relative'>\r\n                <Toolbar className={ classes.toolbar }>\r\n                    <NavIcons />\r\n                    <div className={ classes.spacing } />\r\n                    {\r\n                        width === 'xs'\r\n                        && <IconButton onClick={ () => setOpen( true ) }> <MenuIcon /> </IconButton>\r\n                    }\r\n                    <Typography\r\n                        component=\"a\"\r\n                        href=\"#about\"\r\n                        // className={`nav__items animation-change-color ${ false ? \"nav__items--active\" : \"\"}`}\r\n                        className={ classes.navItems }\r\n                    >AboutMe</Typography>\r\n                    <Typography\r\n                        component=\"a\"\r\n                        href=\"#projects\"\r\n                        // className={`nav__items animation-change-color ${ false ? \"nav__items--active\" : \"\"}`}\r\n                        className={ classes.navItems }\r\n                    >Projects</Typography>\r\n                    <Typography\r\n                        component=\"a\"\r\n                        href=\"#stack\"\r\n                        // className={`nav__items animation-change-color ${  false ? \"nav__items--active\" : \"\"}`}\r\n                        className={ classes.navItems }\r\n                    >Stack</Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Drawer\r\n              variant=\"temporary\"\r\n              anchor=\"left\"\r\n              open={ open }\r\n              onClose={ () => setOpen( false )}\r\n              className={ classes.drawer }\r\n              classes={{\r\n                  paper: classes.drawerPaper\r\n              }}\r\n            >\r\n              <List>\r\n                    <ListItem \r\n                        button\r\n                        onClick={ () => handleChange('#about') }\r\n                    >\r\n                        <ListItemIcon>\r\n                            <AccountCircleIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText\r\n                            primaryTypographyProps={{ className: classes.itemText }}\r\n                        >\r\n                           AboutMe \r\n                        </ListItemText>                            \r\n                    </ListItem>\r\n                    <ListItem \r\n                        button\r\n                        onClick={ () => handleChange('#projects') }\r\n                    >\r\n                        <ListItemIcon>\r\n                            <AppsIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText\r\n                            primaryTypographyProps={{ className: classes.itemText }}\r\n                        >\r\n                           Projects \r\n                        </ListItemText>                            \r\n                    </ListItem>\r\n                    <ListItem \r\n                        button\r\n                        onClick={ () => handleChange('#stack') }\r\n                    >\r\n                        <ListItemIcon>\r\n                            <ReorderIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText\r\n                            primaryTypographyProps={{ className: classes.itemText }}\r\n                        >\r\n                           Stack \r\n                        </ListItemText>                            \r\n                    </ListItem>\r\n              </List>\r\n            </Drawer>\r\n        </Fragment>\r\n        \r\n    )\r\n}\r\n\r\nexport default NavBar","import { useMediaQuery, useTheme } from \"@material-ui/core\";\r\n\r\nexport const useWidth = () => {\r\n    const theme = useTheme();\r\n    const keys = [...theme.breakpoints.keys].reverse();\r\n    return (\r\n      keys.reduce((output, key) => {\r\n        // eslint-disable-next-line react-hooks/rules-of-hooks\r\n        const matches = useMediaQuery(theme.breakpoints.up(key));\r\n        return !output && matches ? key : output;\r\n      }, null) || 'xs'\r\n    );\r\n  }","import { Fragment } from 'react';\nimport './App.css';\nimport Stack from './pages/Stack';\nimport Projects from './pages/Projects';\nimport AboutMe from './pages/AboutMe';\nimport { ModalButton } from './components/ModalButton ';\nimport { Container, createTheme, CssBaseline, ThemeProvider } from '@material-ui/core';\nimport NavBar from './components/NavBar';\n\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#212121'\n    },\n    secondary: {\n      main: '#ffc200'\n    },\n    text: {\n      primary: '#5b5b5b',\n      secondary: '#212121'\n    },\n  },\n  typography: {\n    fontFamily: [\n      'Ubuntu',\n      '-apple-system',\n      'BlinkMacSystemFont',\n      '\"Segoe UI\"',\n      'Roboto',\n      '\"Helvetica Neue\"',\n      'Arial',\n      'sans-serif',\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n    ].join(','),\n  },\n  overrides: {\n    MuiToolbar: {\n      root: {\n        backgroundColor: '#fff',\n        color: '#212121'\n      }\n    },\n    MuiButton: {\n      contained: {\n        backgroundColor: '#474559',\n        borderRadius: '40px',\n        color: '#fff',\n        fontWeight: 'bold',\n        paddingTop: '10px',\n        paddingBottom: '10px',\n        '&:hover': {\n          backgroundColor: '#ffc200'\n        }\n      },\n    },\n  },\n})\n\nfunction App() {\n  return (\n      <ThemeProvider theme={ theme }>\n        <CssBaseline />\n        <Container maxWidth=\"lg\">\n          <NavBar />\n          <AboutMe /> \n          <Projects />\n          <Stack />\n          <ModalButton />\n        </Container>\n      </ThemeProvider> \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}